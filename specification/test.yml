openapi: 3.0.1
info:
  title: Описание API сервера проекта «Шесть городов».
  description: "* Описание маршрутов сервера проекта."
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 13.0.0
tags:
  - name: offers
    description: Действия с предложениями.
  - name: favorite
    description: Действия с избранными предложениями.
  - name: comments
    description: Действия с комментариями.
  - name: user
    description: Действия с пользователем.
paths:
  /six-cities/offers:
    get:
      tags:
        - offers
      summary: Получить список предложений
      description: Возвращает массив предложений. Каждое предложение описано в виде
        объекта. Обратите внимание, что заголовок `X-Token`, для данного
        маршрута, не является обязательным. Для авторизованного пользователя
        данные о предложениях содержат флаг `isFavorite`.
      operationId: getOffers
      parameters:
        - name: X-Token
          in: header
          description: Авторизационный токен пользователя
          required: false
          schema:
            type: string
            example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
      responses:
        "200":
          description: Массив предложений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OfferPreview"
  "/six-cities/offers/{offerId}":
    get:
      tags:
        - offers
      summary: Получить предложение
      description: Возвращает предложение с идентификатором `offerId`. Обратите внимание,
        что заголовок `X-Token`, для данного маршрута, не является обязательным.
        Для авторизованного пользователя данные о предложении содержат флаг
        `isFavorite`.
      operationId: getOfferById
      parameters:
        - name: offerId
          in: path
          description: Уникальный идентификатор предложения
          required: true
          schema:
            type: string
            example: 6af6f711-c28d-4121-82cd-e0b462a27f00
        - name: X-Token
          in: header
          description: Авторизационный токен пользователя
          required: false
          schema:
            type: string
            example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
      responses:
        "200":
          description: Объект предложения
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Offer"
        "404":
          description: Предложение не найдено
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
  "/six-cities/offers/{offerId}/nearby":
    get:
      tags:
        - offers
      summary: Получить список предложений неподалёку
      description: Возвращает массив предложений. Каждое предложение описано в виде
        объекта. Обратите внимание, что заголовок `X-Token`, для данного
        маршрута, не является обязательным. Для авторизованного пользователя
        данные о предложениях содержат флаг `isFavorite`.
      operationId: getOffersNearby
      parameters:
        - name: offerId
          in: path
          description: Уникальный идентификатор предложения
          required: true
          schema:
            type: string
            example: 6af6f711-c28d-4121-82cd-e0b462a27f00
        - name: X-Token
          in: header
          description: Авторизационный токен пользователя
          required: false
          schema:
            type: string
            example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
      responses:
        "200":
          description: Массив предложений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OfferPreview"
        "404":
          description: Предложение не найдено
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
  /six-cities/favorite:
    get:
      tags:
        - favorite
      summary: Получить список избранных предложений
      description: Возвращает массив предложений, добавленных в избранное.
      operationId: getFavorites
      parameters:
        - name: X-Token
          in: header
          description: Авторизационный токен пользователя
          required: true
          schema:
            type: string
            example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
      responses:
        "200":
          description: Массив предложений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OfferPreview"
        "401":
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/AuthError"
                  - $ref: "#/components/schemas/TokenNotFound"
      security:
        - tokenAuth: []
  "/six-cities/favorite/{offerId}/{status}":
    post:
      tags:
        - favorite
      summary: Изменить статус избранного у предложение
      description: Возвращает предложение с идентификатором `offerId` с актуальным
        состоянием поля `isFavorite`
      operationId: postFavorite
      parameters:
        - name: offerId
          in: path
          description: Уникальный идентификатор предложения
          required: true
          schema:
            type: string
            example: 6af6f711-c28d-4121-82cd-e0b462a27f00
        - name: status
          in: path
          description: Статус избранного предложения. Может быть `1` или `0`, где `1`
            добавляет предложение в избранное, а `0` удаляет
          required: true
          schema:
            type: number
            example: 1
        - name: X-Token
          in: header
          description: Авторизационный токен пользователя
          required: true
          schema:
            type: string
            example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
      responses:
        "200":
          description: Объект предложения
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OfferMaximum"
        "201":
          description: Объект предложения
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OfferMaximumFavorite"
        "400":
          description: Ошибка тела запроса
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParamFavoriteError"
        "401":
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/AuthError"
                  - $ref: "#/components/schemas/TokenNotFound"
        "404":
          description: Предложение не найдено
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/NotFoundError"
                  - $ref: "#/components/schemas/NotFoundFavoriteError"
        "409":
          description: Предложение уже добавлено в избранное
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictAddFavoriteError"
      security:
        - tokenAuth: []
  "/six-cities/comments/{offerId}":
    get:
      tags:
        - comments
      summary: Получить список комментариев
      description: Возвращает список комментариев для предложения с идентификатором
        `offerId`.
      operationId: getComment
      parameters:
        - name: offerId
          in: path
          description: Уникальный идентификатор предложения
          required: true
          schema:
            type: string
            example: 6af6f711-c28d-4121-82cd-e0b462a27f00
      responses:
        "200":
          description: Массив комментариев
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommentGet"
        "404":
          description: Предложение не найдено
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
    post:
      tags:
        - comments
      summary: Добавить новый комментарий
      description: Добавляет новый комментарий для предложения с идентификатором `offerId`.
      operationId: postComment
      parameters:
        - name: offerId
          in: path
          description: Уникальный идентификатор предложения
          required: true
          schema:
            type: string
            example: 6af6f711-c28d-4121-82cd-e0b462a27f00
        - name: X-Token
          in: header
          description: Авторизационный токен пользователя
          required: true
          schema:
            type: string
            example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
      requestBody:
        description: Объект с новым комментарием
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentPost"
        required: true
      responses:
        "201":
          description: Объект нового комментария
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentGet"
        "400":
          description: Ошибка тела запроса
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentPostError"
        "401":
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/AuthError"
                  - $ref: "#/components/schemas/TokenNotFound"
        "404":
          description: Предложение не найдено
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
      security:
        - tokenAuth: []
  /six-cities/login:
    get:
      tags:
        - user
      summary: Проверить статус авторизации пользователя
      description: Возвращает информацию о статусе авторизации пользователя.
      operationId: getUserStatus
      parameters:
        - name: X-Token
          in: header
          description: Авторизационный токен пользователя
          required: true
          schema:
            type: string
            example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
      responses:
        "200":
          description: Статус авторизации пользователя
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthInfoWithToken"
        "401":
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/AuthError"
                  - $ref: "#/components/schemas/TokenNotFound"
      security:
        - tokenAuth: []
    post:
      tags:
        - user
      summary: Авторизоваться на сервере
      description: Отправляет авторизационные данные пользователя (логин и пароль). В
        случае успешного запроса сервер вернёт токен, по которому в дальнейшем
        происходит авторизация. Этот токен необходимо передавать через заголовок
        X-Token. Если авторизация не проходит, сервер вернёт код состояния 401
        при запросах на закрытые части сайта.
      operationId: postLogin
      requestBody:
        description: Объект, содержащий логин и пароль пользователя.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: Статус авторизации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthInfoWithToken"
        "400":
          description: Ошибка тела запроса
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthPostError"
  /six-cities/logout:
    delete:
      tags:
        - user
      summary: Завершить сеанс пользователя
      description: Завершает сеанс работы — выход из закрытой части приложения.
      operationId: deleteLogout
      parameters:
        - name: X-Token
          in: header
          description: Авторизационный токен пользователя
          required: true
          schema:
            type: string
            example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
      responses:
        "204":
          description: Сеанс завершён
      security:
        - tokenAuth: []
components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          example: Oliver.conner@gmail.com
        password:
          type: string
          example: password1
    HostInfo:
      type: object
      properties:
        name:
          type: string
          example: Oliver Conner
        avatarUrl:
          type: string
          example: https://url-to-image/image.png
        isPro:
          type: boolean
          example: false
    AuthInfo:
      allOf:
        - $ref: "#/components/schemas/HostInfo"
        - type: object
          properties:
            email:
              type: string
              example: Oliver.conner@gmail.com
    AuthInfoWithToken:
      allOf:
        - $ref: "#/components/schemas/AuthInfo"
        - type: object
          properties:
            token:
              type: string
              example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
    Location:
      type: object
      properties:
        latitude:
          type: number
          example: 52.35514938496378
        longitude:
          type: number
          example: 4.673877537499948
        zoom:
          type: number
          example: 8
    City:
      type: object
      properties:
        name:
          type: string
          example: Amsterdam
        location:
          $ref: "#/components/schemas/Location"
    OfferMinimum:
      type: object
      properties:
        id:
          type: string
          example: 6af6f711-c28d-4121-82cd-e0b462a27f00
        title:
          type: string
          example: Beautiful & luxurious studio at great location
        type:
          type: string
          example: apartment
        price:
          type: number
          example: 120
        city:
          $ref: "#/components/schemas/City"
        location:
          $ref: "#/components/schemas/Location"
        isFavorite:
          type: boolean
          example: false
        isPremium:
          type: boolean
          example: false
        rating:
          type: number
          example: 4
    OfferPreview:
      allOf:
        - $ref: "#/components/schemas/OfferMinimum"
        - type: object
          properties:
            previewImage:
              type: string
              example: https://url-to-image/image.png
    Offer:
      allOf:
        - $ref: "#/components/schemas/OfferMinimum"
        - type: object
          properties:
            description:
              type: string
              example: A quiet cozy and picturesque that hides behind a a river by the
                unique lightness of Amsterdam.
            bedrooms:
              type: number
              example: 4
            goods:
              type: array
              items:
                type: string
                example: Heating
            host:
              $ref: "#/components/schemas/HostInfo"
            images:
              type: array
              items:
                type: string
                example: https://url-to-image/image.png
            maxAdults:
              type: number
              example: 4
    OfferMaximum:
      allOf:
        - $ref: "#/components/schemas/OfferPreview"
        - type: object
          properties:
            description:
              type: string
              example: A quiet cozy and picturesque that hides behind a a river by the
                unique lightness of Amsterdam.
            bedrooms:
              type: number
              example: 3
            goods:
              type: array
              items:
                type: string
                example: Heating
            host:
              $ref: "#/components/schemas/HostInfo"
            images:
              type: array
              items:
                type: string
                example: https://url-to-image/image.png
            maxAdults:
              type: number
              example: 4
    OfferMaximumFavorite:
      allOf:
        - $ref: "#/components/schemas/OfferMaximum"
        - type: object
          properties:
            isFavorite:
              type: boolean
              example: true
    CommentPost:
      type: object
      properties:
        comment:
          type: string
          example: A quiet cozy and picturesque that hides behind a a river by the
            unique lightness of Amsterdam.
        rating:
          type: number
          example: 4
    CommentGet:
      allOf:
        - type: object
          properties:
            id:
              type: string
              example: b67ddfd5-b953-4a30-8c8d-bd083cd6b62a
            date:
              type: string
              example: 2019-05-08T14:13:56.569Z
            user:
              $ref: "#/components/schemas/HostInfo"
        - $ref: "#/components/schemas/CommentPost"
    AuthError:
      type: object
      properties:
        errorType:
          type: string
          example: COMMON_ERROR
        message:
          type: string
          example: Access deny.
    TokenNotFound:
      type: object
      properties:
        errorType:
          type: string
          example: COMMON_ERROR
        message:
          type: string
          example: Header Token is not correct.
    ConflictAddFavoriteError:
      type: object
      properties:
        errorType:
          type: string
          example: COMMON_ERROR
        message:
          type: string
          example: Offer with id 6af6f711-c28d-4121-82cd-e0b462a27f00 has already been
            added to favorites.
    NotFoundError:
      type: object
      properties:
        errorType:
          type: string
          example: COMMON_ERROR
        message:
          type: string
          example: Offer with id 6af6f711-c28d-4121-82cd-e0b462a27f00 not found.
    NotFoundFavoriteError:
      type: object
      properties:
        errorType:
          type: string
          example: COMMON_ERROR
        message:
          type: string
          example: Offer with id 6af6f711-c28d-4121-82cd-e0b462a27f00 has not been
            added to favorites yet.
    BodyCommentError:
      type: object
      properties:
        property:
          type: string
          example: rating
        value:
          type: string
          example: a
        messages:
          type: array
          items:
            type: string
            example: rating must be a number conforming to the specified constraints
    BodyAuthError:
      type: object
      properties:
        property:
          type: string
          example: password
        value:
          type: string
          example: p
        messages:
          type: array
          items:
            type: string
            example: password must be longer than or equal to 3 characters
    CommentPostError:
      type: object
      properties:
        errorType:
          type: string
          example: VALIDATION_ERROR
        message:
          type: string
          example: "Validation error:
            /six-cities/comments/3254b559-0a4f-4c20-a514-0dc38173ea09"
        details:
          type: array
          items:
            $ref: "#/components/schemas/BodyCommentError"
    ParamFavoriteError:
      type: object
      properties:
        errorType:
          type: string
          example: COMMON_ERROR
        message:
          type: string
          example: "Wrong status to add offer in favorite: 2."
    AuthPostError:
      type: object
      properties:
        errorType:
          type: string
          example: VALIDATION_ERROR
        message:
          type: string
          example: "Validation error: /six-cities/login"
        details:
          type: array
          items:
            $ref: "#/components/schemas/BodyAuthError"
  securitySchemes:
    tokenAuth:
      type: apiKey
      name: X-Token
      in: header
